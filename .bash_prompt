# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png




if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
        MAGENTA=$(tput setaf 9)
        ORANGE=$(tput setaf 172)
        GREEN=$(tput setaf 190)
        PURPLE=$(tput setaf 141)
        WHITE=$(tput setaf 15)
    else
        MAGENTA=$(tput setaf 5)
        ORANGE=$(tput setaf 4)
        GREEN=$(tput setaf 2)
        PURPLE=$(tput setaf 1)
        WHITE=$(tput setaf 7)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
else
    MAGENTA="\033[1;31m"
    ORANGE="\033[1;33m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BOLD=""
    RESET="\033[m"
fi

export MAGENTA
export ORANGE
export GREEN
export PURPLE
export WHITE
export BOLD
export RESET


function parse_git_dirty() {
    [[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}

function parse_git_branch() {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# Doesn't work because $? is not 0 anymore...
function smiley() {
     if [ $? = 0 ];
     then
          echo "\[$GREEN\]:)\[$RESET\]";
     else
          echo "\[$ORANGE\]:(\[$RESET\]";
     fi
}


user="\[${BOLD}${MAGENTA}\]\u"
host="\[$WHITE\]at \[$ORANGE\]\h"
dir="\[$WHITE\]in \[$GREEN\]\w"
jobs="\[$ORANGE\] j:\j"
history="\[$WHITE\]\!"
gitinfo="\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)"
prompt="\[$WHITE\]\n\$"
date="\[$GREEN\]\t"
reset="\[\033[m\]" # the tput sgr0 reset is not working inside emacs

# TODO replace by PROMPT_COMMAND as discussed here
# http://stackoverflow.com/a/15673542/386327
export PROMPT_COMMAND='echo "setting prompt"'
export PS1="$history $user $host$reset $dir$reset $gitinfo$reset $jobs$reset $date$reset $prompt $reset"
export PS2="\[$ORANGE\]→ \[$RESET\]"
